version: 2.1
orbs:
  node: circleci/node@5

jobs:
  build:
    executor: node/default
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "with-jest-app/package-lock.json" }}
      - node/install-packages:
          pkg-manager: npm
          path: with-jest-app
      - save_cache:
          key: dependency-cache-{{ checksum "with-jest-app/package-lock.json" }}
          paths:
            - with-jest-app/node_modules
      - run:
          name: "Build terminé avec succès"
          command: echo "Build terminé avec succès"

  tests:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "with-jest-app/package-lock.json" }}
      - node/install-packages:
          pkg-manager: npm
          path: with-jest-app
      - run:
          name: "Installation des dépendances Jest"
          command: cd with-jest-app && npm install jest-junit
      - run:
          name: "Vérification de Jest"
          command: cd with-jest-app && npm list jest || npm install -g jest
      - run:
          name: "Exécution des tests unitaires"
          command: cd with-jest-app && npm run test:ci
      - store_test_results:
          path: with-jest-app/test-results/
      - store_artifacts:
          path: with-jest-app/test-results/
          destination: test-results
      - run: echo "Tests terminés avec succès"

  deploy_dev:
    executor: node/default
    steps:
      - checkout
      - run: echo "Déploiement sur l'environnement **DEVELOPMENT** en cours..."

  deploy_integration:
    executor: node/default
    steps:
      - checkout
      - run: echo "Déploiement sur l'environnement **INTEGRATION** en cours..."

  deploy_prod:
    executor: node/default
    steps:
      - checkout
      - run: echo "Déploiement sur l'environnement **PRODUCTION** en cours..."

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - deploy_dev:
          requires:
            - tests
          filters:
            branches:
              only: develop
      - deploy_integration:
          requires:
            - tests
          filters:
            branches:
              only: integration
      - deploy_prod:
          requires:
            - tests
          filters:
            branches:
              only: main
